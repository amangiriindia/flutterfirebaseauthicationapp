plugins {
    id "com.android.application"
    id 'com.google.gms.google-services' // FlutterFire configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// Load key.properties for signing configurations
def keyProperties = new Properties()
def keyPropertiesFile = rootProject.file("key.properties")
if (keyPropertiesFile.exists()) {
    keyPropertiesFile.withReader("UTF-8") { reader ->
        keyProperties.load(reader)
    }
}

android {
    namespace = "com.aman.incrementorstest"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Unique Application ID for your Flutter app
        applicationId "com.aman.incrementorstest"  // Replace with your actual package name if needed

        // Set the minimum and target SDK versions
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion // Automatically use the target SDK version defined in Flutter

        // Set the version code and name
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            // Ensure this points to the correct location of your keystore file
            storeFile file("/assigment.keystore")
            storePassword "12345678"
            keyAlias "assigment"
            keyPassword "12345678"
        }
    }

    buildTypes {
        release {
            // Use the release signing config
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
